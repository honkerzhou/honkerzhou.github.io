(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{306:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"异步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[s._v("#")]),s._v(" 异步")]),s._v(" "),t("p",[s._v("阅读本文前，如果你对事件循环、宏任务、微任务还不清楚，先阅读上一篇"),t("RouterLink",{attrs:{to:"/javascript/event-loop.html"}},[s._v("事件循环")])],1),s._v(" "),t("h2",{attrs:{id:"事件模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件模型"}},[s._v("#")]),s._v(" 事件模型")]),s._v(" "),t("p",[s._v("DOM的点击事件")]),s._v(" "),t("h2",{attrs:{id:"回调函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回调函数"}},[s._v("#")]),s._v(" 回调函数")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("回调函数实现异步原理： 事件循环")]),s._v(" "),t("p",[s._v("优点：解决了同步的问题")]),s._v(" "),t("p",[s._v("用回调函数实现异步的缺点：")]),s._v(" "),t("ol",[t("li",[s._v("缺乏顺序性：大脑对于事情的计划方式是线性的、阻塞的、单线程的语义，但是回调表达异步流 程的方式是非线性的、非顺序的，这使得正确推导这样的代码难度很大。难于理解的代码 是坏代码，会导致坏 bug。")]),s._v(" "),t("li",[s._v("缺乏可信任性：回调会受到控制反转的影响，因为回调暗中把控制权交给第三 方(通常是不受你控制的第三方工具!)来调用你代码中的 continuation。这种控制转移导 致一系列麻烦的信任问题，比如回调被调用的次数是否会超出预期。")]),s._v(" "),t("li",[s._v("回调地狱：多级回调函数嵌套，使代码难以理解和维护")])]),s._v(" "),t("h2",{attrs:{id:"promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[s._v("#")]),s._v(" Promise")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("本节中 Promise 代表 Promise 构造函数， promise 代表 Promise 实例")])]),s._v(" "),t("p",[s._v("Promise的出现主要解决了回调函数缺乏可信任性和回调函数过多嵌套的问题，意为“承诺”。Promise将回调嵌套改为链式调用，增加可读性和可维护性。")]),s._v(" "),t("p",[s._v("promise有三种状态：")]),s._v(" "),t("ul",[t("li",[s._v("初始状态（pending）")]),s._v(" "),t("li",[s._v("已完成（fullfilled）")]),s._v(" "),t("li",[s._v("已拒绝（rejected）")])]),s._v(" "),t("p",[s._v("一旦决议(resolve)，promise就处于完成或拒绝状态，并且不会再被修改。如果没有使用任何值显式决议promise， 那么这个实例的决议值就是 undefined。任何Promise 实例都只有一个决议值")]),s._v(" "),t("h3",{attrs:{id:"thenable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thenable"}},[s._v("#")]),s._v(" thenable")]),s._v(" "),t("p",[s._v("then()方法：接受两个参数：完成回调和拒绝回调")]),s._v(" "),t("p",[s._v("thenable: 任何具有then()方法的对象，即是thenable的")]),s._v(" "),t("h3",{attrs:{id:"new-promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-promise"}},[s._v("#")]),s._v(" new Promise()")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("Promise(..) 必须和 new 一起使用，并且必须提供一个回调函数——执行器。"),t("br"),s._v("\n执行器接受两个回调函数作为参数，通常分别命名为resolve 和 reject。执行器函数是同步的，会被立即调用。")]),s._v(" "),t("p",[s._v("如果在执行器中：")]),s._v(" "),t("ol",[t("li",[s._v("使用多个参数调用 resovle(..) 或者 reject(..)，第一个参数之后的所有参数都会被默默忽略")]),s._v(" "),t("li",[s._v("多次调用resovle(..) 和 reject(..)，只有第一个生效，后续的都会被忽略")])]),s._v(" "),t("p",[s._v("如果在执行器中,向 resolve(..):")]),s._v(" "),t("ul",[t("li",[s._v("传递一个非 promise、非 thenable 的立即值，promise的决议值就是这个立即值")]),s._v(" "),t("li",[s._v("传递一个真正的 promise 或 thenable 值，promise 或 thenable 值会被递归展开，直到提取出一个具体的非 promise 和 非 thenable 的最终值，promise的决议值就是这个最终值")])]),s._v(" "),t("p",[s._v("如果在执行器中,向 reject(..):")]),s._v(" "),t("ul",[t("li",[s._v("传递一个非 promise、非 thenable 的立即值，Promise 实例p的决议值就是这个立即值")]),s._v(" "),t("li",[s._v("传递一个真正的 promise 或 thenable 值，promise 或 thenable 值会被原封不动的设置为拒绝理由，后续的拒绝处理函数接收到的就是传给reject() 的那个 promise 或 thenable 值")])]),s._v(" "),t("p",[s._v("如果在执行器内部抛出一个错误，则promise的拒绝处理程序就会被调用")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),t("p",[s._v("通过 p instanceof Promise 来检查p是不是Promise实例时，注意：")]),s._v(" "),t("ol",[t("li",[s._v("promise 值可能是从其他浏览器窗口(iframe 等)接收到的")]),s._v(" "),t("li",[s._v("库或框架可能会选择实现自己的 Promise，而不是使用原生 ES6 Promise 实现")])])]),s._v(" "),t("h3",{attrs:{id:"promise-resolve-和promise-reject"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-resolve-和promise-reject"}},[s._v("#")]),s._v(" Promise.resolve()和Promise.reject()")]),s._v(" "),t("p",[s._v("这两个方法的调用不会有任务编排的过程")]),s._v(" "),t("p",[s._v("Promise.resolve()和Promise.reject() 分别是创建一个已经决议和已被拒绝的 Promise实例的快捷方式")]),s._v(" "),t("p",[s._v("如果向 Promise.resolve(..)：")]),s._v(" "),t("ul",[t("li",[s._v("传递一个非 promise、非 thenable 的立即值，就会返回一个用这个值填充的 Promise实例")]),s._v(" "),t("li",[s._v("传递了一个非 promise 的 thenable 值，会将这个对象转为 Promise 对象，然后就立即执行thenable对象的then方法（即：试图展开这个 thenable 值，持续到提取出一个具体的非类 promise 的最终值）")]),s._v(" "),t("li",[s._v("传递一个真正的 promise，就会返回同一个 promise （注意此处与执行器函数中调用resolve(..)不同）")])]),s._v(" "),t("p",[s._v("Promise.reject(..) 不会像 Promise.resolve(..) 一样进行展开。如果向 Promise.reject(..) 传入一个 Promise/thenable 值，它会把这个值原封不动地设置为返回的promise的 拒绝理由。后续的拒绝处理函数接收到的是你实际传给 Promise.reject(..) 的那个 Promise/thenable，而不是其底层的立即值。")]),s._v(" "),t("h3",{attrs:{id:"promise-then-和promise-catch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-then-和promise-catch"}},[s._v("#")]),s._v(" promise.then()和promise.catch()")]),s._v(" "),t("ol",[t("li",[s._v("每次你对 promise 调用 then(..)和 catch(..)，它都会创建并返回一个新的 promise")]),s._v(" "),t("li",[s._v("每次调用then()方法或catch()方法都会创建一个新任务，当promise被解决时会被加入到当前事件循环回合的微任务队列（microtask queue）")])]),s._v(" "),t("p",[s._v("Promise.then()，接受两个参数，第一个用于完成回调，第二个用于拒绝回调：")]),s._v(" "),t("ol",[t("li",[s._v("不管从 then(..)的完成回调返回的值是什么（或者返回一个异常），它都会被自动设置 为被链接的 promise的完成值")]),s._v(" "),t("li",[s._v("不管从 then(..) 的拒绝回调返回的值是什么，它都会被自动设置 为被链接的 promise的拒绝值")]),s._v(" "),t("li",[s._v("在 then(..) 的完成拒绝回调或者拒绝回调中抛出一个错误，它都会被自动设置 为被链接的 promise的拒绝值")])]),s._v(" "),t("p",[s._v("如果从完成或拒绝处理函数：")]),s._v(" "),t("ul",[t("li",[s._v("返回一个立即值，这个值就会被用作返回promise的完成值或拒绝值")]),s._v(" "),t("li",[s._v("返回 thenable 或者 Promise 的时候会发生同样的展开，而且展开过程会持续到提取出一个具体的非thenable或非 Promise 的最终值")])]),s._v(" "),t("p",[s._v("如果你调用 promise 的 then(..)，并且只传入一个完成处理函数，一个默认拒绝处理函数 就会顶替上来。默认拒绝处理函数只是把错误重新抛出")]),s._v(" "),t("p",[s._v("如果没有给 then(..) 传递一个适当有效的函数作为完成处理函数参数，还是会有作为替代 的一个默认处理函数。默认的完成处理函数只是把接收到的任何传入值传递给下一个步骤")]),s._v(" "),t("p",[s._v("promise.catch(..)等同于promise.then(null, function(){})")]),s._v(" "),t("h3",{attrs:{id:"promise-all-和promise-race"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-all-和promise-race"}},[s._v("#")]),s._v(" Promise.all()和Promise.race()")]),s._v(" "),t("p",[s._v("Promise.all():")]),s._v(" "),t("ol",[t("li",[s._v("传给 Promise.all([ .. ]) 的数组中的值可以是 Promise、 thenable，甚至是立即值。就本质而言，列表中的每个值都会通过 Promise.resolve(..) 过滤，以确保要等待的是一个真正的 Promise，所以立即值会 被规范化为这个值构建的 Promise。如果数组是空的，主 Promise 就会立 即完成。")]),s._v(" "),t("li",[s._v("从Promise.all([ .. ])返回的主promise在且仅在所有的成员promise都完成后才会完 成。如果这些promise中有任何一个被拒绝的话，主Promise.all([ .. ])promise就会立 即被拒绝，并丢弃来自其他所有 promise 的全部结果。（即只会得到第一个拒绝promise的拒绝理由值）")]),s._v(" "),t("li",[s._v("如果数组列表中的promise有自己的catch()方法，则一旦它被rejected，并不会触发Promise.all()的catch方法")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  Promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("all")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" resArr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entries")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("count\n          resArr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" res\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resArr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("Promise.race():")]),s._v(" "),t("ol",[t("li",[s._v("Promise.race([ .. ])接受单个数组参数，数组中的值可以是 Promise、 thenable和立即值。显然数组中的第一个立即值永远都是第一个完成的")]),s._v(" "),t("li",[s._v("Promise.race([ .. ])中，一旦有任何一个Promise决议为完成/拒绝，Promise.race([ .. ])就会完成/拒绝")]),s._v(" "),t("li",[s._v("如果你传入了一个空数组，Promise. race([..]) 永远不会决议")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  Promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("race")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("iterable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("of")]),s._v(" iterable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"promise-prototype-finally"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-prototype-finally"}},[s._v("#")]),s._v(" Promise.prototype.finally()")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("cb")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("P")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("constructor\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onFulFilled")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// P.resolve(cb())是为了兼容cb是异步函数的情况")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("P")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cb")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" data\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onRejected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("P")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cb")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" err\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("onFulFilled"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" onRejected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"promise拒绝事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise拒绝事件"}},[s._v("#")]),s._v(" Promise拒绝事件")]),s._v(" "),t("p",[s._v("Node.js中：")]),s._v(" "),t("ul",[t("li",[s._v("unhandledRejection 在一个事件循环中，当Promise被拒绝，并且没有提供拒绝处理程序时触发。事件处理程序的参数为一个错误对象和被拒绝的promise")]),s._v(" "),t("li",[s._v("rejectHandled 在一个事件循环后，当Promise被拒绝，若拒绝处理程序被调用时触发。事件处理程序的参数只有一个：被拒绝的promise")])]),s._v(" "),t("p",[s._v("浏览器中：")]),s._v(" "),t("ul",[t("li",[s._v("unhandledrejection 触发条件同Node.js的unhandledRejection")]),s._v(" "),t("li",[s._v("rejecthandled 触发条件同Node的rejectHandled")])]),s._v(" "),t("p",[s._v("浏览器中这两个事件的事件处理程序都只接受一个事件对象为参数")]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("优点：\nPromise主要解决了回调函数缺乏可信任性和回调函数过多嵌套的问题，意为“承诺”。Promise将回调嵌套改为链式调用，增加可读性和可维护性。\nPromise 缺点：")]),s._v(" "),t("ol",[t("li",[s._v("无法取消")]),s._v(" "),t("li",[s._v("如果不设置回调函数，Promise内部抛出的错误，不会反应到外部")]),s._v(" "),t("li",[s._v("当处于pending状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）")])]),s._v(" "),t("h2",{attrs:{id:"生成器与迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成器与迭代器"}},[s._v("#")]),s._v(" 生成器与迭代器")]),s._v(" "),t("h3",{attrs:{id:"生成器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成器"}},[s._v("#")]),s._v(" 生成器")]),s._v(" "),t("p",[s._v("生成器(generator)的出现主要解决了回调函数缺乏顺序性的问题，用顺序、看似同步的表达风格控制异步流程(具有依赖关系的Promise依然会嵌套调用Promise，并且链式的Promise难以处理某些条件下需要断开链式调用的场景)。")]),s._v(" "),t("p",[s._v("Generator实现的核心在于上下文的保存，函数并没有真的被挂起，每一次yield，其实都执行了一遍传入的生成器函数，只是在这个过程中间用了一个context对象储存上下文，使得每次执行生成器函数的时候，都可以从上一个执行结果开始执行，看起来就像函数被挂起了一样")]),s._v(" "),t("p",[t("strong",[s._v("生成器")]),s._v("是一种返回迭代器的函数"),t("br"),s._v("\nyield只可以用在生成器内部，并且和return一样，不能穿透函数边界，即yield只能用在生成器函数的直接作用域中\nyield表达式如果用在另一个表达式之中，必须放在圆括号里面"),t("br"),s._v("\nyield表达式用作函数参数或放在赋值表达式的右边，可以不加括号\n不能用箭头函数来创建生成器"),t("br"),s._v("\n声明格式：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一种")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二种")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三种")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[s._v("#")]),s._v(" 迭代器")]),s._v(" "),t("p",[s._v("迭代器(iterator)的出现旨在消除多个循环嵌套产生的复杂性并减少循环中的错误")]),s._v(" "),t("p",[t("strong",[s._v("迭代器")]),s._v("是一种特殊对象，具有一个next()方法，每次调用这个方法都返回一个对象，这个对象中有两个属性：")]),s._v(" "),t("ol",[t("li",[s._v("value：表示下一个将要返回的值")]),s._v(" "),t("li",[s._v("done：布尔类型，当没有更多可返回数据时返回true")])]),s._v(" "),t("p",[s._v("迭代器中还保存有一个内部指针，用来指向当前集合中值的位置，每调用一次next()，都返回下一个可用的值")]),s._v(" "),t("p",[t("strong",[s._v("iterable(可迭代)对象")]),s._v("：指包含一个可以在其值上迭代的迭代器的对象"),t("br"),s._v("\niterable 对象内部必须支持一个函数属性，其名称 是专门的 ES6 符号值 Symbol.iterator。调用这个函数时，它会返回一个迭代器。")]),s._v(" "),t("p",[s._v("生成器函数默认会为通过生成器创建的迭代器对象添加Symbol.iterator属性，故此类迭代器都是可迭代对象")]),s._v(" "),t("p",[s._v("默认情况下，开发者定义的对象都不是可迭代对象")]),s._v(" "),t("p",[s._v("for-of循环与迭代器息息相关，每执行一次都会调用可迭代对象的next()方法，并将返回的结果对象的value属性存储在一个变量中，循环持续执行到返回对象的done属性为true")]),s._v(" "),t("p",[s._v("数组、Map、Set都内建了三种迭代器:entries()、values()、keys()")]),s._v(" "),t("p",[s._v("数组的keys()迭代器，使用for-of只会针对数字类型的索引。但对数组用for-in，则会包含数组属性（可以开发者自己添加）")]),s._v(" "),t("p",[s._v("数组和Set的默认迭代器是values(),Map的是entries()"),t("br"),s._v("\n默认的数组迭代器并不关心通过 next(..) 调用发送的任何消息")]),s._v(" "),t("p",[s._v("展开运算符可以用于任何可迭代对象")]),s._v(" "),t("h3",{attrs:{id:"迭代器与生成器的合作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器与生成器的合作"}},[s._v("#")]),s._v(" 迭代器与生成器的合作")]),s._v(" "),t("p",[s._v("调用生成器函数生成一个迭代器，实际上就隐式构建了生成器的一个实例，通过这个迭代器来控制的是这个生成器实例。")]),s._v(" "),t("p",[s._v("规范和所有兼容浏览器都会默默丢弃传递给第一个 next() 的任何东西。因此，启动生成器时一定要用不带参数的 next()。")]),s._v(" "),t("p",[s._v("迭代器调用throw()方法抛出的错误如果在生成器内部被捕获了，会继续执行下一条yield语句，返回结果对象")]),s._v(" "),t("p",[s._v("在生成器中使用return，结果对象的done属性会被设为true，如果return了值，则结果对象的value属性为该值")]),s._v(" "),t("p",[s._v('可以在外部通过return(..) 手工终止生成器的迭代器实例：it.return( "Hello World" )')]),s._v(" "),t("h3",{attrs:{id:"委托生成器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#委托生成器"}},[s._v("#")]),s._v(" 委托生成器")]),s._v(" "),t("p",[s._v("在生成器函数内部，将星号放在yield和生成器函数名之间，则产生了委托生成器"),t("br"),s._v("\n委托生成器内部的return回的值不会反映在外部的生成器，但是可以将委托生成器函数的返回值赋给一个变量（如result），再添加一条yield语句（如yield result），则外部的生成器的迭代器的返回对象中的value值为该值，done值不受该return影响")]),s._v(" "),t("h3",{attrs:{id:"总结-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("生成器优点：可以控制函数的执行")]),s._v(" "),t("h2",{attrs:{id:"async"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async"}},[s._v("#")]),s._v(" Async")]),s._v(" "),t("p",[s._v("async 函数会返回一个 promise，可以使用then方法添加回调函数。当函数执行的时候一旦遇到 await 就会先返回，等到触发的异步操作完成，再执行该 async 函数体内后面的语句（统一放在微任务里处理）。在 async 函数完全结束之后，其返回的 promise 会决议。")]),s._v(" "),t("p",[s._v("async函数内部return语句返回的值，会成为then方法回调函数的参数")]),s._v(" "),t("p",[s._v("async函数内部抛出错误，会导致返回的 Promise 对象变为reject状态。抛出的错误对象会被catch方法回调函数接收到")]),s._v(" "),t("p",[s._v("正常情况下，await命令后面是一个 Promise 对象，返回该对象的结果。如果不是 Promise 对象，就直接返回对应的值")]),s._v(" "),t("p",[s._v("另一种情况是，await命令后面是一个thenable对象（即定义了then方法的对象），那么await会将其等同于 Promise 对象（即等待then方法执行完）")]),s._v(" "),t("p",[s._v("在 Promise 中 resolve 一个 thenable 对象”，需要先将 thenable 转化为 Promsie，然后立即调用 thenable 的 then 方法，并且 这个过程需要作为一个 job 加入微任务队列，以保证对 then 方法的解析发生在其他上下文代码的解析之后")]),s._v(" "),t("p",[s._v("对于 await v：\nawait 后的值 v 会被转换为 Promise\n即使 v 是一个已经 fulfilled 的 Promise，还是会新建一个 Promise，并在这个新 Promise 中 resolve(v)\nawait v 后续的代码的执行类似于传入 then() 中的回调")]),s._v(" "),t("p",[s._v("任何一个await语句后面的 Promise 对象变为reject状态，那么整个async函数都会中断执行，等同于async函数返回的 Promise 对象被reject")]),s._v(" "),t("h2",{attrs:{id:"多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[s._v("#")]),s._v(" 多线程")]),s._v(" "),t("h2",{attrs:{id:"总结-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("获得 Promise 和生成器最大效用的最自然的方法就是 yield 出来一个 Promise，然后通过这个 Promise 来控制生成器的迭代器。")]),s._v(" "),t("p",[s._v("在异步控制流程方面，生成器的关键优点是:生成器内部的代码是以自然的同步 / 顺序方 式表达任务的一系列步骤。其技巧在于，我们把可能的异步隐藏在了关键字 yield 的后面， 把异步移动到控制生成器的迭代器的代码部分。\n换句话说，生成器为异步代码保持了顺序、同步、阻塞的代码模式，这使得大脑可以更自 然地追踪代码，解决了基于回调的异步的两个关键缺陷之一。")])])}),[],!1,null,null,null);t.default=e.exports}}]);