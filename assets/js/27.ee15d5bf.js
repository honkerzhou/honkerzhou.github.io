(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{311:function(t,s,o){"use strict";o.r(s);var a=o(14),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"原型-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型-prototype"}},[t._v("#")]),t._v(" 原型(prototype)")]),t._v(" "),s("h2",{attrs:{id:"对象的属性与原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的属性与原型"}},[t._v("#")]),t._v(" 对象的属性与原型")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("知识点一")])]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("引用对象的属性")]),t._v("时会触发默认的 "),s("code",[t._v("[[Get]]")]),t._v(" 操作,步骤如下：\n"),s("ol",[s("li",[t._v("检查对象本身是否有这个属性,如果有的话就使用它,没有的话进入第2步；")]),t._v(" "),s("li",[t._v("继续访问对象的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链,这个过程会持续到找到匹配的属性名或者查找完整条 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链(普通的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链最终都会指向内置的 "),s("code",[t._v("Object.prototype")]),t._v(")。如果是后者的话, "),s("code",[t._v("[[Get]]")]),t._v(" 操作的返回值是 "),s("code",[t._v("undefined")]),t._v("。")])])]),t._v(" "),s("li",[s("strong",[t._v("设置对象的属性")]),t._v("(eg: "),s("code",[t._v('myObject.foo = "bar";')]),t._v(")的步骤如下：\n"),s("ol",[s("li",[t._v("如果 "),s("code",[t._v("myObject")]),t._v(" 对象中包含名为 "),s("code",[t._v("foo")]),t._v(" 的普通数据访问属性,这条赋值语句只会修改已有的属性值, "),s("code",[t._v("myObject")]),t._v(" 的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链上层如果有 "),s("code",[t._v("foo")]),t._v(" 属性的话，会被屏蔽;")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("foo")]),t._v(" 不是直接存在于 "),s("code",[t._v("myObject")]),t._v(" 中, "),s("code",[t._v("[[Prototype]]")]),t._v(" 链就会被遍历,类似上面提及的 "),s("code",[t._v("[[Get]]")]),t._v(" 操作，此时有两种情况：\n"),s("ul",[s("li",[t._v("如果原型链上找不到 "),s("code",[t._v("foo")]),t._v(" , "),s("code",[t._v("foo")]),t._v(" 就会被直接添加到 "),s("code",[t._v("myObject")]),t._v(" 上;")]),t._v(" "),s("li",[t._v("如果原型链上层有 "),s("code",[t._v("foo")]),t._v(" 的话，会出现的三种情况：\n"),s("ol",[s("li",[s("code",[t._v("foo")]),t._v(" 为普通数据访问属性并且没有被标记为只读( "),s("code",[t._v("writable:false")]),t._v(" ),那就会直接在 "),s("code",[t._v("myObject")]),t._v(" 中添加一个名为 "),s("code",[t._v("foo")]),t._v(" 的新属性,它是屏蔽属性;")]),t._v(" "),s("li",[s("code",[t._v("foo")]),t._v(" 为普通数据访问属性并且被标记为只读( "),s("code",[t._v("writable:false")]),t._v(" ),那么无法修改已有属性或者在 "),s("code",[t._v("myObject")]),t._v(" 上创建屏蔽属性。如果运行在严格模式下,代码会抛出一个错误。否则,这条赋值语句会被忽略。总之,不会发生屏蔽;")]),t._v(" "),s("li",[s("code",[t._v("foo")]),t._v(" 是一个 "),s("code",[t._v("setter")]),t._v(",那就一定会调用这个 "),s("code",[t._v("setter")]),t._v("。 "),s("code",[t._v("foo")]),t._v(" 不会被添加到(或者说屏蔽于) "),s("code",[t._v("myObject")]),t._v(" ,也不会重新定义 "),s("code",[t._v("foo")]),t._v(" 这个 "),s("code",[t._v("setter")]),t._v("。")])])])])])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("如果使用"),s("code",[t._v("Object.defineProperty(..)")]),t._v(" 来向 "),s("code",[t._v("myObject")]),t._v(" 添加 "),s("code",[t._v("foo")]),t._v("，则不能使用上述的"),s("strong",[t._v("设置对象的属性")]),t._v("的步骤。")])]),t._v(" "),s("h2",{attrs:{id:"类-与原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类-与原型"}},[t._v("#")]),t._v(" ”类“与原型")]),t._v(" "),s("p",[s("em",[s("strong",[t._v("知识点二")])]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("JavaScript中的对象内置 "),s("code",[t._v("[[prototype]]")]),t._v(" 属性；")]),t._v(" "),s("li",[t._v("对象的 "),s("code",[t._v("[[prototype]]")]),t._v(" 属性默认有一个公有并且不可枚举的属性 "),s("code",[t._v("[[constructor]]")]),t._v(" ,返回创建该对象的函数的引用;")]),t._v(" "),s("li",[t._v("函数是特殊的对象；")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("new")]),t._v(" 来调用函数,或者说发生构造函数调用时,会自动执行下面的操作：\n"),s("ol",[s("li",[t._v("创建(或者说构造)一个全新的对象。")]),t._v(" "),s("li",[t._v("这个新对象会被执行 "),s("code",[t._v("[[prototype]]")]),t._v(" 连接（这个新对象的 "),s("code",[t._v("[[prototype]]")]),t._v(" 属性指向构造函数的 "),s("code",[t._v("[[prototype]]")]),t._v(" 属性）。")]),t._v(" "),s("li",[t._v("这个新对象会绑定到函数调用的 "),s("code",[t._v("this")]),t._v(" 。")]),t._v(" "),s("li",[t._v("如果函数没有返回值或者返回的是基本类型值,那么 "),s("code",[t._v("new")]),t._v(" 表达式中的函数调用会自动返回这个新对象；如果返回的是引用类型值，则构造函数调用的返回值就是这个引用类型值")])])]),t._v(" "),s("li",[t._v("在面向类的语言中,实例化(或者继承)一个类就意味着“把类的行为复制到物理对象中”,对于每一个新实例来说都会重复这个过程。但是在 "),s("code",[t._v("JavaScript")]),t._v(" 中,并没有类似的复制机制。你不能创建一个类的多个实例,只能创建多个对象,它们 "),s("code",[t._v("[[Prototype]]")]),t._v(" 关联的是同一个对象。但是在默认情况下并不会进行复制,因此这些对象之间并不会完全失去联系,它们是互相关联的。")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("请看以下代码来理解知识点")])]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析2")]),t._v("\n\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析3")]),t._v("\n\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析4")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("em",[s("strong",[t._v("代码解析")])]),t._v("：")]),t._v(" "),s("ol",[s("li",[s("ul",[s("li",[t._v("对象 "),s("code",[t._v("Foo")]),t._v(" 由函数Foo创建，并且内置 "),s("code",[t._v("[[Prototype]]")]),t._v(" 属性；")]),t._v(" "),s("li",[t._v("对象 "),s("code",[t._v("Foo")]),t._v(" 的属性 "),s("code",[t._v("Foo.prototype")]),t._v(" 是一个对象，默认有属性 "),s("code",[t._v("[[constructor]]")]),t._v(" ，它指向创建对象 "),s("code",[t._v("Foo")]),t._v(" 的函数——函数 "),s("code",[t._v("Foo")]),t._v(" 的引用；")]),t._v(" "),s("li",[t._v("故得 "),s("code",[t._v("Foo.prototype.constructor === Foo; // true")])])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("调用"),s("code",[t._v("new Foo()")]),t._v("时会创建一个全新的对象，并使这个对象的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 属性指向 "),s("code",[t._v("Foo.prototype")]),t._v(" 指向的那个对象；")]),t._v(" "),s("li",[t._v("然后将这个全新的对象赋值给了 a；")]),t._v(" "),s("li",[t._v("故得"),s("code",[t._v("Object.getPrototypeOf(a) === Foo.prototype; // true")])])])]),t._v(" "),s("li",[s("ul",[s("li",[t._v('对象 a 和对象 b 都是 "类Foo"的"实例"，它们的 '),s("code",[t._v("[[Prototype]]")]),t._v(" 关联的是同一个对象——"),s("code",[t._v("Foo.prototype")]),t._v("；")]),t._v(" "),s("li",[t._v("故得"),s("code",[t._v("Object.getPrototypeOf(a) === Object.getPrototypeOf(b); // true")])])])]),t._v(" "),s("li",[t._v("a 和 "),s("code",[t._v("Foo")]),t._v(" 其实都是没有 "),s("code",[t._v("[[constructor]]")]),t._v(" 属性的：\n"),s("ul",[s("li",[s("code",[t._v("a.constructor")]),t._v(" 只是通过默认的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 委托指向 "),s("code",[t._v("Foo.prototype")]),t._v("，而 "),s("code",[t._v("Foo.prototype.constructor")]),t._v(" 默认指向 "),s("code",[t._v("Foo")]),t._v("；")]),t._v(" "),s("li",[t._v("同理，"),s("code",[t._v("Foo.constructor")]),t._v(" 是通过默认的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 委托指向 "),s("code",[t._v("Function.prototype")]),t._v("，而 "),s("code",[t._v("Function.prototype.constructor")]),t._v(" 指向 "),s("code",[t._v("Function")]),t._v("，因为函数"),s("code",[t._v("Foo")]),t._v("由引用类型 "),s("code",[t._v("Function")]),t._v(" 创建；")])])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("知识点三")])]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("constructor")]),t._v(" 并不表示被构造！")]),t._v(" "),s("li",[s("code",[t._v("instanceof")]),t._v(" 操作符；")]),t._v(" "),s("li",[s("code",[t._v("isPrototypeOf(..)")]),t._v(" 。")])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("请看以下代码来理解知识点")])]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* .. */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* .. */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个新原型对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析1")]),t._v("\n\na "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 见代码解析3")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("em",[s("strong",[t._v("代码解析")])]),t._v("：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("从之前讲的知识点可知：")]),t._v(" "),s("ul",[s("li",[t._v("默认情况下"),s("code",[t._v("Foo.prototype.constructor === Foo;")]),t._v("；")]),t._v(" "),s("li",[t._v("a 其实都是没有 "),s("code",[t._v("[[constructor]]")]),t._v(" 属性的，执行 "),s("code",[t._v("a.constructor")]),t._v("会遍历整条 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链；")])]),t._v(" "),s("p",[t._v("所以，更改 "),s("code",[t._v("Foo.prototype")]),t._v(" 后，执行 "),s("code",[t._v("a.constructor")]),t._v("在 "),s("code",[t._v("Foo.prototype")]),t._v("是找不到 "),s("code",[t._v("[[constructor]]")]),t._v(" 属性的，然后继续找到 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链的终点——"),s("code",[t._v("Object.prototype")]),t._v(",故得"),s("code",[t._v("a.constructor === Object; // true")]),t._v("，所以"),s("code",[t._v("constructor")]),t._v(" 并不表示被构造！")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("instanceof")]),t._v(" 回答的问题是：在 对象 a 的整条 "),s("code",[t._v("[[Prototype]]")]),t._v(" 链中是否有指向 "),s("code",[t._v("Foo.prototype")]),t._v(" 的对象。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("isPrototypeOf(..)")]),t._v(" 回答的问题是：在 a 的整条 [[Prototype]] 链中是否出现过 "),s("code",[t._v("Foo.prototype")]),t._v("。")])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("知识点四")])]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Object.create(..)")]),t._v(" 会创建一个新对象，并把这个对象的 "),s("code",[t._v("[[Prototype]]")]),t._v(" 关联到我们指定的对象。")]),t._v(" "),s("li",[t._v("访问对象的原型分两种情况：\n"),s("ol",[s("li",[t._v("普通对象：\n"),s("ul",[s("li",[s("code",[t._v("obj.__proto__")])]),t._v(" "),s("li",[s("code",[t._v("obj.constructor.prototype")])]),t._v(" "),s("li",[s("code",[t._v("Object.getPrototypeOf(obj)")])])])]),t._v(" "),s("li",[t._v("函数对象：\n"),s("ul",[s("li",[s("code",[t._v("fun.prototype")])])])])])])]),t._v(" "),s("p",[s("em",[s("strong",[t._v("请看以下代码来理解知识点")])]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("something")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tell me something good..."')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("something")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tell me something good...")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("em",[s("strong",[t._v("代码解析")])]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("对象 "),s("code",[t._v("bar")]),t._v(" 本身没有 "),s("code",[t._v("something")]),t._v(" 方法;")]),t._v(" "),s("li",[t._v("执行 "),s("code",[t._v("var bar = Object.create( foo );")]),t._v(" 会把对象 "),s("code",[t._v("bar")]),t._v(" 的"),s("code",[t._v("[[Prototype]]")]),t._v(" 关联到我们指定的对象 "),s("code",[t._v("foo")]),t._v(";")]),t._v(" "),s("li",[t._v("故执行 "),s("code",[t._v("bar.something();")]),t._v(" 会通过"),s("code",[t._v("[[Prototype]]")]),t._v("链引用到 "),s("code",[t._v("foo.something()")]),t._v("。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);